<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Enayetur Raheem&#39;s blog</title>
<link>https://www.eraheem.com/atom.html</link>
<atom:link href="https://www.eraheem.com/atom.xml" rel="self" type="application/rss+xml"/>
<description>Enayetur Raheem&#39;s blog</description>
<language>en</language>
<generator>quarto-1.3.450</generator>
<lastBuildDate>Mon, 20 Nov 2023 05:00:00 GMT</lastBuildDate>
<item>
  <title>Rendering Quarto document with project-specific Anaconda Python environment in RStudio/Posit</title>
  <dc:creator>Enayetur Raheem</dc:creator>
  <link>https://www.eraheem.com/blog/2023/11/20/quarto-jupyter-conda-env-rstudio-config/index.html</link>
  <description><![CDATA[ <p>Suppose you were trying to run a quarto document in Rstudio. In that case, it will run fine if your default Python version has the correct libraries installed. But what if you are working on a project where project-specific libraries are to be installed and used? And all to be set up in an Anaconda Python environment in RStudio?</p>
<p>It is possible. However, setting up a custom Anaconda environment and using that specific Python version is not apparent. You might have to spend some time to figure out from Stackoverflow and some GitHub issue queues.</p>
<div class="quarto-figure quarto-figure-center page-columns page-full">
<figure class="figure page-columns page-full"><p><img src="https://www.eraheem.com/blog/2023/11/20/quarto-jupyter-conda-env-rstudio-config/rstudio-quarto-cat-python-env.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption margin-caption">The <a href="https://www.bing.com/images/create/rendering-quarto-document-in-rstudio-with-anaconda/1-655beb394b934e4596477b701667f46f?id=e2U5qsGTLirwwqCzs3KP%2bA%3d%3d&amp;view=detailv2&amp;idpp=genimg&amp;FORM=GCRIDP&amp;mode=overlay">social sharing image</a> was generated using Bing with the prompt “Rendering Quarto document in Rstudio with Anaconda Python environment”</figcaption></figure>
</div>
<p>I’ve figured it out after spending a couple of hours. I wanted to document this in case I need it later, or someone else might need it.</p>
<p>Here it is.</p>
<section id="steps-at-a-glance" class="level2"><h2 class="anchored" data-anchor-id="steps-at-a-glance">Steps at a glance</h2>
<ul>
<li>Create a Python environment using <a href="https://www.anaconda.com/download">Anaconda distribution</a>. I use this because it is easy to use</li>
<li>Install the necessary libraries in that environment</li>
<li>Create a Quarto project in RStudio</li>
<li>Set the project-specific <code>Renviron</code>
</li>
<li>Set the Python interpreter for your project in Rstudio</li>
<li>Check if Quarto and Jupyter are properly connected to the Python version you want</li>
<li>Render</li>
</ul></section><section id="setting-up-anaconda" class="level2"><h2 class="anchored" data-anchor-id="setting-up-anaconda">Setting up Anaconda</h2>
<p>I will skip this section, assuming that you either have Anaconda installed or are managing your Python environment in other ways. If you need help with that, please search on YouTube; there are good videos on this topic.</p>
</section><section id="setting-up-rstudio" class="level2"><h2 class="anchored" data-anchor-id="setting-up-rstudio">Setting up RStudio</h2>
<p>The first is to create a separate Rstudio project to house your code and documents. We’re using Python with the Jupyter engine to run the Quarto document.</p>
</section><section id="check-your-current-jupyter-engine" class="level2"><h2 class="anchored" data-anchor-id="check-your-current-jupyter-engine">Check your current Jupyter engine</h2>
<p>From within Rstudio, use the Terminal tab (bottom left panel). It should open the terminal within Rstudio. On the CLI, type the following.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> check jupyter</span></code></pre></div>
<p>This should produce an output like the following:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[✓]</span> Checking Python 3 installation....OK</span>
<span id="cb2-2">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Version:</span> 3.8.13 <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Conda</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-3">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Path:</span> /Users/enayetraheem/opt/anaconda3/envs/ibis3813/bin/python</span>
<span id="cb2-4">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Jupyter:</span> 4.10.0</span>
<span id="cb2-5">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Kernels:</span> python3</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[✓]</span> Checking Jupyter engine render....OK</span></code></pre></div>
<p>Notice that it shows the current Python engine, which is <code>/Users/enayetraheem/opt/anaconda3/envs/ibis3813</code>. Also, we can see the Jupyter version here.</p>
<p><strong>Where does Rstudio get this information from?</strong></p>
<p>The short answer is: from the global <code>.Renviron</code> file. In the current Renviron, this is what I have.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">QUARTO_PYTHON</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/Users/enayetraheem/opt/anaconda3/envs/ibis3813/bin/python</span></code></pre></div>
<p>If you want to use this Python environment, then you are good. It should run Python without issues. Also, ensure new libraries are installed in this environment for you to use in this notebook.</p>
</section><section id="the-problem" class="level2"><h2 class="anchored" data-anchor-id="the-problem">The problem</h2>
<p>The problem occurs when you want to use a different environment! The one you see above is the global environment. RStudio will choose this unless you specify a project-specific <code>.Renviron</code>.</p>
<p>The solution seems easy.</p>
<p>Let’s take a look at the current setup.</p>
<p><img src="https://www.eraheem.com/blog/2023/11/20/quarto-jupyter-conda-env-rstudio-config/rstudio-project-config1.png" class="img-fluid"></p>
<p>There is no Python interpreter set for the current project. We can select one, but that won’t work.</p>
<p>Let’s set the Python interpreter to be the following:</p>
<p><img src="https://www.eraheem.com/blog/2023/11/20/quarto-jupyter-conda-env-rstudio-config/rstudio-project-config2.png" class="img-fluid"></p>
<p>Let’s restart RStudio. And check back, Quarto.</p>
<p>When you run <code>quarto check jupyter</code>, you will get the same response as before, not the Python you’ve set up with, as shown in the screenshot above.</p>
</section><section id="the-solution" class="level2"><h2 class="anchored" data-anchor-id="the-solution">The solution</h2>
<p>The solution is to set project-specific <code>.Renviron</code></p>
<div class="cell">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">usethis</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://usethis.r-lib.org/reference/edit.html">edit_r_environ</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>scope <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"project"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<p>When you execute this, it will open up the editor, where you can put the following information.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">QUARTO_PYTHON</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/Users/enayetraheem/opt/anaconda3/envs/chasing-python/bin/python3.11</span></code></pre></div>
</section><section id="restart" class="level2"><h2 class="anchored" data-anchor-id="restart">Restart</h2>
<p>Make sure to restart your entire RStudio and then reopen the project. Then run in the terminal the</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> check jupyter</span></code></pre></div>
<p>This should render the following.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"></span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[✓]</span> Checking Python 3 installation....OK</span>
<span id="cb7-3">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Version:</span> 3.11.5 <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Conda</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb7-4">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Path:</span> /Users/enayetraheem/opt/anaconda3/envs/chasing-python/bin/python3.11</span>
<span id="cb7-5">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Jupyter:</span> 5.5.0</span>
<span id="cb7-6">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Kernels:</span> python3</span>
<span id="cb7-7"></span>
<span id="cb7-8"></span>
<span id="cb7-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[✓]</span> Checking Jupyter engine render....OK</span></code></pre></div>
</section><section id="summary" class="level2"><h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>This article demonstrated the steps to set up a Python interpreter in a local RStudio project. We used the Anaconda Python package manager to create and manage the envs. Then we use <code><a href="https://usethis.r-lib.org/reference/edit.html">usethis::edit_r_environ()</a></code> library with <code>scope="project"</code> argument to edit the project-specific Python interpreter.</p>


<!-- -->

</section><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{raheem2023,
  author = {Raheem, Enayetur},
  title = {Rendering {Quarto} Document with Project-Specific {Anaconda}
    {Python} Environment in {RStudio/Posit}},
  date = {2023-11-20},
  url = {https://www.eraheem.com/blog/2023/11/20/quarto-jupyter-conda-env-rstudio-config},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-raheem2023" class="csl-entry quarto-appendix-citeas">
Raheem, Enayetur. 2023. <span>“Rendering Quarto Document with
Project-Specific Anaconda Python Environment in RStudio/Posit.”</span>
November 20, 2023. <a href="https://www.eraheem.com/blog/2023/11/20/quarto-jupyter-conda-env-rstudio-config">https://www.eraheem.com/blog/2023/11/20/quarto-jupyter-conda-env-rstudio-config</a>.
</div></div></section></div> ]]></description>
  <category>Python</category>
  <category>Quarto</category>
  <category>Anaconda</category>
  <category>usethis</category>
  <guid>https://www.eraheem.com/blog/2023/11/20/quarto-jupyter-conda-env-rstudio-config/index.html</guid>
  <pubDate>Mon, 20 Nov 2023 05:00:00 GMT</pubDate>
  <media:content url="https://www.eraheem.com/blog/2023/11/20/quarto-jupyter-conda-env-rstudio-config/rstudio-quarto-cat-python-env.png" medium="image" type="image/png" height="103" width="144"/>
</item>
</channel>
</rss>
